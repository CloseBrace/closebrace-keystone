{{!< default}}

      <!-- CONTENT -->
      <article>

<!-- TITLE BOX -->
<section class="title-box">
  <h1>Five Minute React</h1>
  <h2>Learn React, Redux, Webpack and More with Fun, Easy, Bite-sized Tutorials</h2>
</section>
<!-- /TITLE BOX -->

<!-- INTRO IMAGE -->
<section class="intro-image">
  <img src="http://res.cloudinary.com/closebrace/image/upload/w_720/v1517416695/mamhy841pehconcai9no.png" alt="Five Minute React logo" />
</section>
<!-- /INTRO IMAGE -->

<!-- ARTICLE TEXT -->
<section class="article-text">
  <h3>Let's Face It &hellip; Most React Tutorials Suck</h3>
  <p>
    Have you run into this problem? You get started with a React tutorial, and before you know it, it's jumping into what feels like the middle of things without any explanation, assuming you know stuff that you haven't learned yet, and throwing long and confusing code samples at you. You pick at it a bit, but eventually get distracted, and never come back to it. A couple weeks later, you still don't know React, so you go looking for another tutorial and repeat the process.
  </p>
  <p class="promo">Five Minute React is different.</p>
  <p>
     We start at the absolute basics: setting up a text editor. From there, we proceed with getting Node, MongoDB, and associated tech installed. We scaffold out our Express.js-based webserver (which will run our API), then build and deploy a complete sample application using Express and React. Every single tutorial comes with full video and full text. Nothing is skipped, and there's never a time when I say "OK just go write this code" &ndash; every single line of code is laid down as it's needed.
  </p>
  <p>
    This course is built to be extremely granular, but unintimidating. Everything is explained. Sometimes we even do things the long way just to be clear on what's happening, before refactoring the code to be more concise. A few times, we even introduce bugs and then fix them in subsequent episodes. At the end of <em>Five Minute React</em>, you'll be comfortable building React components, managing their local state, connecting them to your Store (application state) with Redux actions and reducers, and making asynchronous XHR calls to both your API and an outside API. And if you're <em>not</em> comfortable with those things and don't think the course was worth your money, it comes with a 100% money-back guarantee.
  </p>

  <p class="center" style="margin: 2rem 0;">
    <a href="buy" class="btn btn-secondary btn-fat">Get Five Minute React</a>
  </p>

  <h3>What Are People Saying?</h3>

  <p class="testimonial">
    <span>“CloseBrace really helped me in shifting my career from being a BioInformatician to a Web Developer. With his clear and instructive tutorials I was able to launch my first React site in two months’ time. Without CloseBrace, I wouldn't have managed.”</span> &ndash; Sjors van Heuveln
  </p>

  <p class="testimonial">
    <span>“Great tutorial, thanks! Very clear and simple instructions. You definitely deserve more subscribers.”</span> &ndash; Timo Ernst
  </p>

  <p class="testimonial">
    <span>“Thank you for the tutorial series and all the useful stuff you are providing. It helped me get confident with React and understand many basics.”</span> &ndash; Samos
  </p>



  <h3>Get Started</h3>
  <p>
    Want to get a feel for the course? The first <strong>ten episodes</strong> are entirely free. Just click them in the course listing below!
  </p>
  <p>
    Ready to dive into the whole thing? You can buy <em>Five Minute React</em> in its entirety for one low price.
  </p>

  <p class="center"><button class="btn btn-secondary btn-fat">Get Five Minute React for <strike>$84.99</strike> $49.99</button></p>

  <h3>Complete Course Listing</h3>
  <p>
    This is a big course! But keep in mind, each of these tutorials is only about five minutes long.
  </p>
  <ul>
    <li>Introduction</li>
    <li>1. Installing Sublime Text</li>
    <li>2. Configuring Sublime Text</li>
    <li>3. Installing Node</li>
    <li>4. Package Control</li>
    <li>5. Using Node Modules</li>
    <li>6. Installing MongoDB</li>
    <li>7. Using MongoDB</li>
    <li>8. Version Control Part 1</li>
    <li>9. Version Control Part 2</li>
    <li>10. Installing Express</li>
    <li>11. Intro to Express Part 1</li>
    <li>12. Intro to Express Part 2</li>
    <li>13. Express Routing</li>
    <li>14. Express Cleanup and API Setup</li>
    <li>15. Git Branching</li>
    <li>16. Data Modeling</li>
    <li>17. Installing Passport</li>
    <li>18. Setting Up Testing</li>
    <li>19. Testing With Jest</li>
    <li>20. Testing an API Endpoint</li>
    <li>21. Working With ESLint</li>
    <li>22. ESLint From The Command Line</li>
    <li>23. Installing React Necessities</li>
    <li>24. Setting Up Webpack</li>
    <li>25. Our First React Components</li>
    <li>26. Using Props In React</li>
    <li>27. Webpack Hot-Reloading Part 1</li>
    <li>28. Webpack Hot-Reloading Part 2</li>
    <li>29. React Folders and Template</li>
    <li>30. Building Out Components</li>
    <li>31. React Routing</li>
    <li>32. Fixing Webpack</li>
    <li>33. DRYing Your Code</li>
    <li>34. Adding Bootstrap</li>
    <li>35. Classes and State</li>
    <li>36. Building a Log In Page</li>
    <li>37. API Endpoint: Registration</li>
    <li>38. Log In and Log Out</li>
    <li>39. A Basic Intro to Redux</li>
    <li>40. Setting Up The Store</li>
    <li>41. Redux Actions</li>
    <li>42. Redux Tools</li>
    <li>43. Optimizing for Production Part 1</li>
    <li>44. Optimizing Part 2</li>
    <li>45. Wiring Up Log-In Part 1</li>
    <li>46. Wiring Up Log-In Part 2</li>
    <li>47. Wiring Up Log-In Part 3</li>
    <li>48. Displaying User Information</li>
    <li>49. Intro to Component Lifecycle</li>
    <li>50. Logging Out</li>
    <li>51. Asynchronous Actions</li>
    <li>52. Refactoring Log-In</li>
    <li>53. Final Action Refactoring</li>
    <li>54. Building A Registration Page</li>
    <li>55. Sending to the Registration API</li>
    <li>56. Registration Success Page</li>
    <li>57. Error Handling</li>
    <li>58. Front-End Validation</li>
    <li>59. Back-End Validation</li>
    <li>60. Reset Password Part 1</li>
    <li>61. Reset Password Part 2</li>
    <li>62. Setting Up SMTP</li>
    <li>63. Securing Secrets</li>
    <li>64. Save Password Part 1</li>
    <li>64.5. Fix The Production Build</li>
    <li>65. Save Password Part 2</li>
    <li>66. Save Password Part 3</li>
    <li>67. Setting Up An External API</li>
    <li>68. Search Albums</li>
    <li>69. Add Album Front-End</li>
    <li>70. Add Album Back-End</li>
    <li>71. Saving Music Data Locally</li>
    <li>72. Search and Add Artists</li>
    <li>73. View a User's List</li>
    <li>74. Improving Music Lists</li>
    <li>75. Wire Up Remove Buttons</li>
    <li>76. Upgrade Node and React</li>
    <li>77. Improving The Home Page</li>
    <li>78. Final Webpack Optimizations</li>
    <li>79. Securing Express</li>
    <li>80. Set Up a Server</li>
    <li>81. Create a Superuser</li>
    <li>82. Merging to Master</li>
    <li>83. Install Node and MongoDB</li>
    <li>84. Secure MongoDB and Finalize</li>
    <li>Wrapup</li>
  </ul>
</section>
<!-- /ARTICLE TEXT -->

      </article>
      <!-- /CONTENT -->